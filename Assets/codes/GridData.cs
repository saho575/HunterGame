using UnityEngine;

public static class GridData
{
    public static int[,] Map1 = new int[,]
    {
        { 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0},
        { 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0, 0, 0, 2, 0, 0, 0, 0,0,0,0,0},
        { 0, 0, 0, 0, 0, 1, 1, 1,1, 1, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0},
        { 0, 0, 0, 0, 0, 0, 0, 0,0, 1, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0},
        { 0, 0, 0, 0, 0, 0, 0, 0,0, 1, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0},
        { 0, 0, 0, 0, 0, 1, 1, 1,1, 1, 0, 0, 0, 0, 0,1, 0, 0, 1, 0, 0, 0, 0,0,0,0,0},
        { 0, 0, 0, 0, 0, 0, 0, 0,2, 0, 0, 0, 0, 0, 0,1, 0, 0, 1, 0, 0, 0, 0,0,0,0,0},
        { 0, 0, 0, 0, 0, 1, 1, 1,1, 1, 0, 0, 0, 0, 0,1, 0, 0, 1, 0, 0, 0, 0,0,0,0,0},
        { 0, 0, 0, 0, 0, 0, 0, 0,0, 1, 0, 0, 0, 0, 0,1, 0, 0, 1, 0, 0, 0, 0,0,0,0,0},
        { 0, 0, 0, 0, 0, 0, 0, 0,0, 1, 0, 0, 0, 0, 0,1, 1, 1, 1, 0, 0, 0, 0,0,0,0,0},
        { 0, 0, 0, 0, 0, 1, 1, 1,1, 1, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 1, 0, 0,0,0,0,0},
        { 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 2, 0, 0,0, 0, 0, 0, 0, 1, 1, 1,1,1,0,0},
        { 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0},
        { 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0},
    };
    public static int[,] Map2 = new int[,]
{
    { 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0 },
    { 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 2, 0,0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0 },
    { 0, 0, 0, 0, 0, 0, 1, 1,1, 1, 0, 0, 0, 0, 0,0, 0, 1, 1, 1, 1, 0, 0,0,0,0,0 },
    { 0, 0, 0, 0, 0, 0, 0, 0,0, 1, 0, 0, 0, 0, 0,0, 0, 1, 0, 0, 1, 0, 0,0,0,0,0 },
    { 0, 0, 0, 0, 0, 0, 0, 0,0, 1, 0, 0, 0, 0, 0,0, 0, 1, 0, 0, 1, 0, 0,0,0,0,0 },
    { 0, 0, 0, 0, 0, 1, 1, 1,1, 1, 0, 0, 0, 0, 1,1, 1, 1, 1, 0, 0, 0, 0,0,0,0,0 },
    { 0, 0, 0, 0, 0, 0, 0, 0,2, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0 },
    { 0, 0, 0, 0, 0, 1, 1, 1,1, 1, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0 },
    { 0, 0, 0, 0, 0, 0, 0, 0,0, 1, 0, 0, 0, 0, 0,0, 0, 0, 2, 0, 0, 0, 0,0,0,0,0 },
    { 0, 0, 0, 0, 0, 0, 0, 0,0, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 0, 0, 0, 0,0,0,0,0 },
    { 0, 0, 0, 0, 0, 1, 1, 1,1, 1, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 1, 0, 0,0,0,0,0 },
    { 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 2, 0, 0,0, 0, 0, 0, 0, 1, 1, 1,1,1,1,0 },
    { 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0 },
    { 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0 },
};
    /*
    public static int[,] GetMapByScene(int sceneNumber)
    {
        switch (sceneNumber)
        {
            case 1:
                return Map;
            case 2:
                return Map2;
            default:
                Debug.LogWarning("Sahnede tanımlı bir harita yok, varsayılan Map1 seçiliyor.");
                return Map1;
        }
    }*/
}

